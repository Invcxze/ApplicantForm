version: '3.9'
networks:
  app-network:
    driver: bridge

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forms-backend
    command: sh -c "uv run src/manage.py migrate && uv run src/manage.py runserver 0.0.0.0:8028"
    volumes:
      - ./src:/app/src
    ports:
      - "8028:8028"
    env_file:
      - .env
    depends_on:
#      - db
      - minio
    networks:
      - app-network

#  db:
#    image: postgres:15
#    env_file: .env
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#    ports:
#      - "5433:5432"
#    networks:
#      - app-network

  minio:
    image: minio/minio:RELEASE.2023-05-04T21-44-30Z
    container_name: shop-minio
    command: server /data --console-address ":9004"
    ports:
      - "9003:9003"
      - "9004:9004"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    networks:
      - app-network

  minio-init:
    image: alpine:latest
    platform: linux/amd64
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      apk add --no-cache curl &&
      curl -O https://dl.min.io/client/mc/release/linux-amd64/mc &&
      chmod +x mc &&
      ./mc alias set local http://146.255.188.248:9004 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} &&
      ./mc mb local/local-bucket-shop || true &&
      ./mc policy set download local/local-bucket-shop || true
      ./mc admin config set local api.cors.allow-origin="*"
      ./mc admin config set local api.cors.allowed-headers="*"
      ./mc admin config set local api.cors.allowed-methods="GET,PUT,POST,DELETE"
      ./mc admin service restart local
      "
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    networks:
      - app-network

volumes:
  pgdata:
  minio-data: